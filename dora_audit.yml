---
- name: "DORA Compliance Audit with PASS/FAIL"
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    dora_output_dir: /var/tmp/dora_audit_reports
    dora_results: []

  pre_tasks:
    - name: "Ensure audit report directory exists"
      file:
        path: "{{ dora_output_dir }}"
        state: directory
        mode: '0755'

  tasks:

    - name: "[DORA-1] Uptime and availability"
      shell: uptime
      register: uptime_out

    - name: "Log [DORA-1] result"
      set_fact:
        dora_results: "{{ dora_results + [ 'DORA-1: PASS ✅ Uptime collected' ] }}"

    - name: "[DORA-2] OS version"
      shell: cat /etc/os-release
      register: os_release

    - name: "Log [DORA-2] result"
      set_fact:
        dora_results: "{{ dora_results + [ 'DORA-2: PASS ✅ OS version collected' ] }}"

    - name: "[DORA-3] Kernel version"
      shell: uname -r
      register: kernel_version

    - name: "Log [DORA-3] result"
      set_fact:
        dora_results: "{{ dora_results + [ 'DORA-3: PASS ✅ Kernel version: ' ~ kernel_version.stdout ] }}"

    - name: "[DORA-4] Firewall status (ufw)"
      shell: ufw status
      register: ufw_status
      failed_when: false
      changed_when: false

    - name: "Log [DORA-4] result"
      set_fact:
        dora_results: "{{ dora_results + [
          'DORA-4: ' ~ (
            'PASS ✅ Firewall is active'
            if 'Status: active' in ufw_status.stdout
            else 'FAIL ❌ Firewall is not active'
          )
        ] }}"

    - name: "[DORA-5] SSH Configuration"
      shell: grep -E '^PermitRootLogin|^PasswordAuthentication' /etc/ssh/sshd_config || true
      register: ssh_config
      failed_when: false

    - name: "Log [DORA-5] result"
      set_fact:
        dora_results: "{{ dora_results + [
          'DORA-5: ' ~ (
            'PASS ✅ Secure SSH config'
            if ('PermitRootLogin no' in ssh_config.stdout and 'PasswordAuthentication no' in ssh_config.stdout)
            else 'FAIL ❌ SSH config allows root or password login'
          )
        ] }}"

    - name: "[DORA-6] Sudo access control"
      shell: getent group sudo || getent group wheel
      register: sudo_users

    - name: "Log [DORA-6] result"
      set_fact:
        dora_results: "{{ dora_results + [ 'DORA-6: PASS ✅ Sudo group: ' ~ sudo_users.stdout ] }}"

    - name: "[DORA-7] Listening ports"
      command: ss -tuln
      register: open_ports

    - name: "Log [DORA-7] result"
      set_fact:
        dora_results: "{{ dora_results + [ 'DORA-7: PASS ✅ Listening ports collected' ] }}"

    - name: "[DORA-8] Logging (rsyslog)"
      stat:
        path: /etc/rsyslog.conf
      register: rsyslog_conf

    - name: "Log [DORA-8] result"
      set_fact:
        dora_results: "{{ dora_results + [
          'DORA-8: ' ~ (
            'PASS ✅ rsyslog.conf present'
            if rsyslog_conf.stat.exists
            else 'FAIL ❌ Logging not configured'
          )
        ] }}"

    - name: "[DORA-9] Audit daemon"
      shell: systemctl is-active auditd
      register: auditd_status
      failed_when: false
      changed_when: false

    - name: "Log [DORA-9] result"
      set_fact:
        dora_results: "{{ dora_results + [
          'DORA-9: ' ~ (
            'PASS ✅ auditd active'
            if auditd_status.stdout == 'active'
            else 'FAIL ❌ auditd is not running'
          )
        ] }}"

    - name: "[DORA-10] Time synchronization"
      shell: timedatectl status
      register: time_status

    - name: "Log [DORA-10] result"
      set_fact:
        dora_results: "{{ dora_results + [
          'DORA-10: ' ~ (
            'PASS ✅ Time sync active'
            if 'System clock synchronized: yes' in time_status.stdout
            else 'FAIL ❌ Time sync not active'
          )
        ] }}"

  post_tasks:
    - name: "DORA Compliance Report Summary"
      debug:
        var: dora_results
